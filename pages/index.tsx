import Head from "next/head";
import styles from "../styles/Home.module.scss";
import { useDispatch, useSelector } from "react-redux";
import axios from "axios";
import { clr_pallete, motherNode } from "../d";
import React, { useEffect, useRef } from "react";
import { updateNodeSystem } from "../feautures/node/nodeSlice";
import Sidebar from "../components/sidebar/Sidebar";
import FileEditors from "../components/file-editing/FileEditors";
import { RootState } from "../feautures/store";
import SettingsFile from "../components/settings/SettingsFile";

export default function Home({ motherNode }: { motherNode: motherNode }) {
  const { show, settings } = useSelector((state: RootState) => state.settings);
  const containerRef = useRef() as React.MutableRefObject<HTMLDivElement>;

  function updateCSSVariables(object: clr_pallete, container: HTMLDivElement) {
    const entries = Object.entries(object);
    entries.forEach((arr) => {
      container.style.setProperty(`--${arr[0]}`, `${arr[1]}`);
    });
  }

  useEffect(() => {
    updateCSSVariables(settings.clr_pallete, containerRef.current)
  }, [settings._v]);

  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(updateNodeSystem(motherNode));
  }, [motherNode]);

  return (
    <div ref={containerRef} className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Sidebar />
      {show.editor ? <SettingsFile /> : <FileEditors />}
    </div>
  );
}

export async function getServerSideProps() {
  try {
    const motherNode = await axios.get<{ motherNode: { motherNode: motherNode } }>(process.env.NEXT_PUBLIC_API_URL + "node");
    return {
      props: {
        motherNode: motherNode.data.motherNode,
      },
    };
  } catch (error) {
    console.error(error);
  }
}
